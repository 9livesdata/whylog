notifications:
  slack:
    secure: O0jV38fRjAKInDl28LiHPGjOjp0uRMM6SvJSCCHsx5dvxynZSFwfLkrdKxFTomMb61gBRIgnrjbTzHMkttVd2O0GdNNWgo5NbAfm731lua360qtq7toW4hJtnHauFhrWiXLL1TNpliqT+OEzlfO/VCx6I3VMunKBBwPRkCRQ3EhlxF7Ga7YJ0JptN60PkIqlmys34yyqcZx7Ui+tflfQ5GoLm58kabe9trdYaRcxFo9rCe8pO2A6MEDNrUHlxIJewC4JuWOdDfKS60iTGUI2+KZePuCUfQiRT0HkJrqhisnM+0WR5G/1eb4QOs1sQRsUNsVJHbfWead+keknx/4smkSHQkv9n/SX9TboPscS2syGgA8TWQoHn7EBaJWs7Yg+GlXZDjjqAqVCM4r7kwwHVpoq5HJ2Dw1YqFARobtLLDsMcftzngaWw6dwD+HxMYzM3ebCX1bx62dncvTF5nqEqDp2ivemyfjfhAGb2rX9H0g0LiYB2P+choqkkaqN1ybrhR/l8AM4pheV7QzzpcDCz7idnx176mitgWMlqiPBJa9wDx0kScBGCeU/Wg9xFoAu7Ek3pH+Xy+RAI2REXCCqTYSJjUmGsvWrauaf+dyYRjOMfJeECNzQqhudkndxGsSZXTjxzX2ZV/R0STmZP8r1rT97MPg+3ZCM7jnZDjSlBPo=

language: python
python:
  - "2.6"
  - "2.7"
  - "3.2"
  - "3.3"
  - "3.4"
  - "3.5"
  - "nightly"
  - "pypy"
  - "pypy3"

matrix:
  include:
    - python: "2.7"
      env: JYTHON=true
    - python: "2.7"
      env: YAPF=true
    - python: "3.5"
      env: YAPF=true

before_install:
  - uname -a
  - lsb_release -a
  - virtualenv --version
  # get jython
  - if [ -n "$JYTHON" ]; then wget http://search.maven.org/remotecontent?filepath=org/python/jython-installer/2.7.0/jython-installer-2.7.0.jar -O jython-installer-2.7.0.jar; fi
  - if [ -n "$JYTHON" ]; then java -jar jython-installer-2.7.0.jar --silent --directory $HOME/jython; fi
  # create jython virtualenv
  - if [ -n "$JYTHON" ]; then virtualenv --system-site-packages -p $HOME/jython/bin/jython $HOME/.virtualenv/jython; fi
  - if [ -n "$JYTHON" ]; then source $HOME/.virtualenv/jython/bin/activate; fi
  # easy install works on jython (pip does not seem to, jip violates .virtualenv sandbox...)
  - if [ -n "$JYTHON" ]; then wget http://peak.telecommunity.com/dist/ez_setup.py; fi
  - if [ -n "$JYTHON" ]; then python ez_setup.py ; fi
  - python --version

install:
  - if [ -n "$JYTHON" ]; then easy_install nose; fi
  - if [ -n "$JYTHON" ]; then easy_install test-generator; fi
  - if [ ! -n "$JYTHON" ]; then pip --version; fi
  - if [ ! -n "$JYTHON" ]; then pip install -r requirements.txt; fi
  - if [ ! -n "$JYTHON" ]; then pip install -r requirements-test.txt; fi
  - if [ -n "$YAPF" ]; then python setup.py develop; fi

before_script:
  # Before runing the test case, we need to make jython run some code as in first run it can put something on stdout
  - if [ -n "$JYTHON" ]; then python -c "print ''"; fi

script:
  - if [ -n "$YAPF" ]; then yapf --diff --recursive .; exit; fi
  - python setup.py nosetests
