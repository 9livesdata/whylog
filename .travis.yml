notifications:
  slack: 9livesdatazpp:rEIvPs5yjBw9GEjggS388fDO#travis

language: python
python:
  - "2.6"
  - "2.7"
  - "3.2"
  - "3.3"
  - "3.4"
  - "3.5"
  - "nightly"
  - "pypy"
  - "pypy3"

matrix:
  include:
    - python: "2.7"
      env: JYTHON=true
    - python: "2.7"
      env: SCA=true
    - python: "3.5"
      env: SCA=true

cache:
  - pip
  - directories:
    - $HOME/jython-pip
    - $HOME/jython
    - $HOME/.virtualenv/jython

before_install:
  - uname -a
  - lsb_release -a
  - virtualenv --version
  # get jython
  - if [ -n "$JYTHON" -a ! -d "$HOME/jython" ]; then wget http://search.maven.org/remotecontent?filepath=org/python/jython-installer/2.7.1b3/jython-installer-2.7.1b3.jar -O jython-installer-2.7.1b3.jar; fi
  - if [ -n "$JYTHON" -a ! -d "$HOME/jython" ]; then java -jar jython-installer-2.7.1b3.jar --silent --directory $HOME/jython; fi
  # install a custom version of pip, as standard pip doesn't work on jython (https://github.com/jythontools/pip/commits/develop)
  - if [ -n "$JYTHON" -a ! -d "$HOME/jython-pip" ]; then mkdir ~/jython-pip; fi
  - if [ -n "$JYTHON" -a ! -d "$HOME/jython-pip" ]; then wget https://pypi.python.org/packages/py2.py3/p/pip/pip-7.1.2-py2.py3-none-any.whl -O ~/jython-pip/pip-7.1.2-py2.py3-none-any.whl; fi
  # create jython virtualenv
  - if [ -n "$JYTHON" -a ! -d "$HOME/.virtualenv/jython" ]; then virtualenv --system-site-packages --extra-search-dir=$HOME/jython-pip -p $HOME/jython/bin/jython $HOME/.virtualenv/jython; fi
  - if [ -n "$JYTHON" -a ! -d "$HOME/.virtualenv/jython" ]; then source $HOME/.virtualenv/jython/bin/activate; fi

install:
  # `pip install -r requirements.txt` does not work on jython
  - cat requirements*.txt | xargs pip install
  - if [ -z "$SCA" ]; then python setup.py develop; fi

before_script:
  # Before runing the test case, we need to make jython run some code as in first run it can put something on stdout
  - if [ -n "$JYTHON" ]; then python -c "print ''"; fi

script:
  - if [ -n "$SCA" ]; then yapf --diff --recursive . || exit; fi
  - if [ -n "$SCA" ]; then pyflakes . || exit; fi
  - if [ -n "$SCA" ]; then isort --order-by-type --recursive --line-width 100 --diff --verbose --check-only || exit; fi
  - if [ -n "$SCA" ]; then grep -r '\_\_metaclass\_\_' whylog/ && exit 1 || true; fi
  - if [ -n "$SCA" ]; then exit; fi
  - python setup.py nosetests
